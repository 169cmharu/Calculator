<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAAAAEAIAAoEAAAJgAAABAQAAABACAAKAQAAE4QAAAoAAAAIAAAAEAAAAABACAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAxCewDb0roi+7KKNLtiadXLYmnVy7KKNLvSuiL8QnsA0AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAC5LqILvCmmXLono6+5KaDmuSmi/8AqqP/CK6n/wiup/8AqqP+5KaL/uSmg5rono6+8KaZcuS6iCwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAABuyqjbbwppN7EK6v/wiup/7opo/+3KJ//tSie/7Uonv+1KJ7/tSie/7con/+6KaP/wiup/8Qr
        q/+8KaTeuyqjbf8AAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAsSmaK7sppMXGLK3/vCqk/7Uonv+1KJ7/tSie/7Uonv+1KJ7/tSie/7Uonv+1KJ7/tSie/7Uo
        nv+1KJ7/tSie/7wqpP/GLK3/uymkxbEpmisAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAALgmn0i9KaTwwiuq/7Uonv+1KJ7/tSie/7Uonv+1KJ7/tSie/7Uonv+1KJ7/tSie/7Uo
        nv+1KJ7/tSie/7Uonv+1KJ7/tSie/7Uonv/CK6r/vSmk8LUmnUkAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAC0Jp9IvCik+70qpf+0KJ3/tSie/7Uonv+1KJ7/tSie/7Uonv+1KJ7/tSie/7Uo
        nv+1KJ7/tSie/7Uonv+1KJ7/tSie/7Uonv+1KJ7/tSie/7Qonf+9KqX/vCik+7Qmn0gAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAtCuhKbwopPS9KqX/tCid/7Uonv+1KJ7/tSie/7Uonv+1KJ7/tSie/7Uo
        nv+1KJ7/tSie/7Uonv+1KJ7/tSie/7Uonv+1KJ7/tSie/7Uonv+1KJ7/tSie/7Qonf+9KqX/vCik9LQr
        oSkAAAAAAAAAAAAAAAAAAAAAAAAAAL8/vwS0JZ7OwSio/7MlnP+0JZ3/tSee/7Uonv+1KJ7/tSed/7Ig
        mv+xG5j/rxeW/68Wlv+vFpb/rxaW/68Wlv+vFpb/rxaW/68Wlv+vFpb/rxaW/68Wlv+vFpb/rxaW/64W
        lf+8GaL/shuZzr8/vwQAAAAAAAAAAAAAAAAAAAAAsxuZb8kzsf+4MqL/uDGi/7o2pP+3LaD/syGb/68X
        lv+yIZv/vkSr/8hftv/fo9b/5LHc/+Ou2v/kr9v/46/b/+Sv2//jrtr/46/b/+Sv2//kr9v/46/b/+Ou
        2v/jrtv/5LHc/+Cm1//WV8H/rAuTbwAAAAAAAAAAAAAAAL8VlAzARavoz2C9/8liuP/JY7n/wUqt/7Mj
        nP+7OKX/4qzZ/9mRzv/46/b//////+Wz3f/dnNL/36PW/9yb0v/dndP/3Z3T/96g1P/en9T/25fQ/9yb
        0v/bl9D/3p/U/+Gn1//cmtL/4qrZ///2/v/LZLnoagA/DAAAAAAAAAAAtyWfYNBLuv/CTq//vkGp/7o1
        pP/IX7f/68bl/+i84f/x1ez////////////alc//qQSO/7Qnnf/Xjcv/v0es/8JOr/+1KZ7/0nzE/891
        wP/JYrj/wk6v/9SFx//Vhcj/xVez/7o3pP+9Qqn/1ofJ//7R9v+qCoxgAAAAAAAAAAC2KKC3wCWm/60Q
        k//CTq//57ng/+3K5//rxuX/8tjt//z2+////////////85ywP+sDpP/v0es/+Cm1v/DUbD/47Db/81w
        vv/TgcX/xViz/+vG5f/nut//573g/+a53//GWbT/0XvD/9yd0v/KZ7r//db2/7IambcAAAAAtiSjDrQn
        nu22H57/vkOq/+W03f/w1Ov/8NPr//DT6//46vX/////////////////0HbC/60RlP/CT6//1orK/8xu
        vf/Labv/zXC+/9iQzP/SfcT/0nvD/9B4wf/MbLz/2ZTO/81xvv/Larv/yF+2/9ua0f/yzOz/sR2Y7bYk
        ow61LKE0thyd/8NNsP/57/j//Pb7//fo9f/z3fD/8tru//35/P/////////////////QdsH/0n3E/9SE
        x//PdcD/2pTO/7gzo//GXLX/2pTO/9eNy//Vhsj/143L/9F6w//Ma7z/0XnC/891wP+pBI7/z3TA//HS
        7P+3H57/tSKcNLcjnk+/Jab/25XP/+vE5f/nud//6Lvg/+nA4//03/D//////////////////////9N/
        xf/Re8P/xVez/+3M5//doNP/ty6h/9F9w//CTa//1IPG/7w9p//bmdD/0n7E/+Gp2P/ty+f/1ofJ/6sK
        kP/PdMD/8NLr/70hpP+3Jp5PpQKKXt14zP///////fr9//rx+f/35/T/8tju//Xj8v//////////////
        ////////yGC3/9B3wf/TgcX/zGu7/9iPzP+8Pqj/xlq0/75Bqf/FWLP/uzqm/9B3wf/PdcD/2I/M/8pl
        uf/GW7X/rRGU/890wP/w0uv/vyGl/7UlnV6rDZBc2GrG/+e43//nuuD/6cDi/+zH5v/tyuf/+e73////
        /////////////+W03f+zI5z/syKb/7QknP+yHpr/tCed/7Yqn/+0JJz/rxaW/7k0pP/03vD/8NTs/7o2
        pP+tEZP/syGb/7QknP+wG5j/z3TA//DS6/+/IaX/tCadXLYinkr+3vn////////////9+Pz/9+f0//HW
        7P/ovOH/3p/U/9eKyv/LaLv/sh+a/7Igmv+0JZ3/tSee/7Uonv+1KJ7/tSie/64Ulf/DUbH/+vD4/9yb
        0v/fo9X/+e73/8FKrf+uFZX/tSie/7AamP/PdMD/8NLr/7who/+2JZ5KvS+mK8xjuv/JXbf/v0ar/7o2
        pf+6OKX/uDCi/7Yqn/+0Jp3/tCad/7Upn/+6NaT/uzmm/7o3pf+2KZ//tSie/7Qmnf+uE5T/zW69//78
        /v/Ug8f/rRKU/64Ulf/Xicr//fr9/8tpu/+uE5T/sBmX/85xv//y0+3/tB+c/7cjoCvaJLYHrxmY5Lcc
        nv+zI5z/tiqf/71Bqf+/Rav/v0ar/79GrP+/Rqz/v0as/79GrP++Q6r/ujel/7Edmf+wGZf/rxWW/9aI
        yf/46/b/xVaz/6kGj/+wG5j/sBqY/6kGj//HXLX/+e33/9WEx/+oA43/0nzE//fX8v+vGJjktiS2BwAA
        AAC1Jp6mwiip/8NTsf/KZbn/yF+3/8hetv/IX7f/yF+3/8hft//IX7f/yGC3/7cvof+/Rav/y2i7/8hg
        t//ksdz//////9iNy//FVrP/y2m7/8tpu//Labv/y2m7/8VVs//ZkM3//////+Wz3f/46vX/4oTT/68P
        laYAAAAAAAAAALkpoEnCK6n/tCWd/7QknP+0JJz/tCSc/7QknP+0JJz/tCSc/7QknP+0JJz/sBqY/9mP
        zP/x1+3/8dbt//La7v/uzOj/7s3o//HX7f/x1uz/8dbs//HW7P/x1uz/8dft/+7N6P/uzej/8dXs/9SC
        x/++IKT/tSagSQAAAAAAAAAAqgCqA7QmndS/Kqf/tSie/7Uonv+1KJ7/tSie/7Uonv+1KJ7/tSie/7Uo
        nv+1KJ7/syKb/7Mim/+zIZv/siCb/7Igm/+zIZv/syGb/7Mhm/+zIZv/syGb/7Mhm/+zIZv/syGb/7Mh
        m/+xHpn/uhyg/7QmndSqVaoDAAAAAAAAAAAAAAAAuiegTsQrq/+2KJ//tSie/7Uonv+1KJ7/tSie/7Uo
        nv+1KJ7/tSie/7Uonv+1J57/tSed/7Unnf+1J53/tSed/7Unnf+1J53/tSed/7Unnf+1J53/tSed/7Un
        nf+1J53/tCed/7Ynnv/EK6v/tyegTgAAAAAAAAAAAAAAAAAAAAAAAAAAtSifqsYsrf+0KJ3/tSie/7Uo
        nv+1KJ7/tSie/7Uonv+1KJ7/tSie/7Uonv+1KJ7/tSie/7Uonv+1KJ7/tSie/7Uonv+1KJ7/tSie/7Uo
        nv+1KJ7/tSie/7Uonv+0KJ3/xiyt/7QonqsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC7IqoPuimg2MIr
        qv+0KJ3/tSie/7Uonv+1KJ7/tSie/7Uonv+1KJ7/tSie/7Uonv+1KJ7/tSie/7Uonv+1KJ7/tSie/7Uo
        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
        nzAAAAAAAAAAAAAAAACxKJ1MvSil9MQrq/+3KKD/tSie/7Uonv+1KJ7/tSie/7cooP/EK6v/vSil9LEo
        nUwAAAAAAAAAAAAAAAAAAAAAAAAAALMonCy8KaS0uimj/8UrrP/EK6v/xCur/8UrrP+6KaP/vCmktLMo
        nCwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALwmpi67KKNquSiijLkoooy7KKNqvCamLgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAA=
</value>
  </data>
</root>